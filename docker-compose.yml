version: '3.6'
services:
    ruby:
        image: license-audit:ruby
        build:
            context: .
            dockerfile: dockerfiles/Dockerfile
            args:
                img: ruby:2.5-alpine
                apks: libcurl curl curl-dev
        environment:
            env: ruby
        volumes:
            - apps:/audit/apps
            - reports:/audit/reports
            - build:/audit/build
            - config:/audit/config
    php:
        image: license-audit:php
        build:
            context: .
            dockerfile: dockerfiles/Dockerfile
            args:
                img: php:7.2-alpine
                apks: composer
        environment:
            env: php
        volumes:
            - apps:/audit/apps
            - reports:/audit/reports
            - build:/audit/build
            - config:/audit/config
    js:
        image: license-audit:js
        build:
            context: .
            dockerfile: dockerfiles/Dockerfile
            args:
                img: alpine
                apks: npm
        environment:
            env: js
        volumes:
            - apps:/audit/apps
            - reports:/audit/reports
            - build:/audit/build
            - config:/audit/config
    java:
        image: license-audit:java
        build:
            context: .
            dockerfile: dockerfiles/Dockerfile-android
            args:
                img: openjdk:8-jdk-stretch
                apks: gradle jq
        environment:
            env: java
        volumes:
            - apps:/audit/apps
            - reports:/audit/reports
            - build:/audit/build
            - config:/audit/config
    python:
        image: license-audit:python
        build:
            context: .
            dockerfile: dockerfiles/Dockerfile
            args:
                img: python:3.8-alpine
                apks: python2 libressl-dev musl-dev libffi-dev
        environment:
            env: python
        volumes:
            - apps:/audit/apps
            - reports:/audit/reports
            - build:/audit/build
            - config:/audit/config
volumes:
  apps:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $PWD/apps
  reports:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $PWD/reports
  build:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $PWD/build
  config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $PWD/config

# Add the following line to an environment group keep docker running for inspection:
# command: tail -f /dev/null